@charset "UTF-8";
@font-face {
  font-family: Bebas Neue;
  font-display: swap;
  src: url("../fonts/Bebas Neue.woff2") format("woff2"), url("../fonts/Bebas Neue.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}
/*Обнуление*/
* {
  padding: 0;
  margin: 0;
  border: 0;
}

*,
*:before,
*:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

[hidden] {
  display: none;
}

:focus,
:active {
  outline: none;
}

a:focus,
a:active {
  outline: none;
}

nav,
footer,
header,
aside {
  display: block;
}

html,
body {
  height: 100%;
  min-width: 320px;
  font-family: "Ubuntu", sans-serif;
  line-height: 1;
  color: #181818;
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

input,
button,
textarea {
  font-family: "Ubuntu", sans-serif;
}

input::-ms-clear {
  display: none;
}

button {
  cursor: pointer;
}

button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

a,
a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

ul li {
  list-style: none;
}

img {
  vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*--------------------*/
body {
  font-weight: 300;
  color: #181818;
  font-size: 1rem;
  overflow-x: hidden;
}
body::-webkit-scrollbar {
  width: 0px;
  background-color: transparent;
}
body::-webkit-scrollbar-thumb {
  width: 0px;
  background-color: transparent;
  border-radius: 13px;
  box-shadow: inset 0 0 0 10px;
}

.wrapper {
  min-height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  position: relative;
}
.wrapper > main {
  flex: 1 1 auto;
}

[class*=__container] {
  max-width: 109.6875rem;
  box-sizing: content-box;
  margin: 0 auto;
  padding: 0 0.625rem;
}

.btn {
  cursor: pointer;
  font-size: 2.5rem;
  line-height: 170%;
  text-transform: uppercase;
  color: #000000;
  white-space: nowrap;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  overflow: hidden;
  height: calc(100px + ((200) - (100)) * ((100vw - 991.98px) / ((1320) - (991.98))));
  width: calc(100px + ((200) - (100)) * ((100vw - 991.98px) / ((1320) - (991.98))));
  background-color: #A6FFFF;
  transition: all 0.3s ease 0s;
}
@media (max-width: 1755px) {
  .btn {
    font-size: calc(1rem + 24 * ((100vw - 320px) / 1435));
  }
}
@media (min-width: 82.5em) {
  .btn {
    height: 12.5rem;
  }
}
@media (max-width: 61.99875em) {
  .btn {
    height: 6.25rem;
  }
}
@media (min-width: 82.5em) {
  .btn {
    width: 12.5rem;
  }
}
@media (max-width: 61.99875em) {
  .btn {
    width: 6.25rem;
  }
}
@media (any-hover: hover) {
  .btn:hover {
    background-color: #0B64FE;
    color: #F3F3F3;
  }
}
@media (max-width: 61.99875em) {
  .btn {
    height: calc(60px + ((100) - (60)) * ((100vw - 320px) / ((991.98) - (320))));
    width: calc(60px + ((100) - (60)) * ((100vw - 320px) / ((991.98) - (320))));
  }
}
@media (max-width: 61.99875em) and (min-width: 61.99875em) {
  .btn {
    height: 6.25rem;
  }
}
@media (max-width: 61.99875em) and (max-width: 20em) {
  .btn {
    height: 3.75rem;
  }
}
@media (max-width: 61.99875em) and (min-width: 61.99875em) {
  .btn {
    width: 6.25rem;
  }
}
@media (max-width: 61.99875em) and (max-width: 20em) {
  .btn {
    width: 3.75rem;
  }
}

.sl-1__container {
  display: grid;
  grid-template-columns: 55.5555555556% 28.49002849%;
  grid-template-areas: "table title" "table p1" "table p2";
  padding: 1.5625rem 1.25rem 2.5rem 1.25rem;
  align-items: center;
  column-gap: 1.875rem;
}
@media (max-width: 61.99875em) {
  .sl-1__container {
    grid-template-columns: 1fr;
    grid-template-areas: "title" "p1" "table" "p2";
    grid-auto-flow: row;
    gap: 1.875rem;
  }
}
.sl-1__action-block {
  grid-area: table;
}
@media (max-width: 61.99875em) {
  .sl-1__action-block {
    order: 3;
  }
}
.sl-1 h1 {
  grid-area: title;
  font-weight: 300;
  font-size: 3.875rem;
  line-height: 100%;
  color: #0B64FE;
  margin-bottom: 0.6451612903em;
}
@media (max-width: 1755px) {
  .sl-1 h1 {
    font-size: calc(2.375rem + 24 * ((100vw - 320px) / 1435));
  }
}
@media (max-width: 61.99875em) {
  .sl-1 h1 {
    order: 1;
    margin-bottom: 0;
  }
}
@media (max-width: 29.99875em) {
  .sl-1 h1 {
    font-weight: 700;
  }
}
.sl-1 .p1 {
  grid-area: p1;
}
@media (max-width: 61.99875em) {
  .sl-1 .p1 {
    order: 2;
  }
}
.sl-1 .p2 {
  grid-area: p2;
}
@media (max-width: 61.99875em) {
  .sl-1 .p2 {
    order: 4;
  }
}
.sl-1 p {
  font-size: 1.375rem;
  line-height: 170%;
}
@media (max-width: 1755px) {
  .sl-1 p {
    font-size: calc(1rem + 6 * ((100vw - 320px) / 1435));
  }
}
.sl-1 p + p {
  margin-top: 2.2727272727em;
}
@media (max-width: 29.99875em) {
  .sl-1 p + p {
    margin-top: 0;
  }
}

.action-block {
  padding: 3.125rem 1.875rem 0.9375rem 1.875rem;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding-bottom: 86.6666666667%;
  position: relative;
}
.action-block__images {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  object-fit: cover;
}
.action-block__images img {
  max-width: 100%;
  object-fit: cover;
}
.action-block__buttons {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: calc(20px + ((75) - (20)) * ((100vw - 320px) / ((1920) - (320))));
}
@media (min-width: 120em) {
  .action-block__buttons {
    gap: 4.6875rem;
  }
}
@media (max-width: 20em) {
  .action-block__buttons {
    gap: 1.25rem;
  }
}

.sl-2 {
  background-color: #181818;
  position: relative;
}
.sl-2__bg {
  z-index: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  object-fit: cover;
}
.sl-2__container {
  z-index: 5;
  position: relative;
  display: flex;
  flex-wrap: wrap;
  padding: 1.5625rem 1.25rem 2.5rem 1.25rem;
  align-items: start;
  gap: 1.875rem;
}
@media (max-width: 110.9375em) {
  .sl-2__container {
    align-items: center;
    justify-items: center;
    justify-content: space-around;
  }
}
.sl-2__container h3 {
  flex: 0 1 70%;
  font-family: "Montserrat", sans-serif;
  font-size: calc(32px + ((62) - (32)) * ((100vw - 320px) / ((1920) - (320))));
  line-height: 110%;
  color: #ffffff;
  font-weight: 900;
}
@media (min-width: 120em) {
  .sl-2__container h3 {
    font-size: 3.875rem;
  }
}
@media (max-width: 20em) {
  .sl-2__container h3 {
    font-size: 2rem;
  }
}
@media (max-width: 991.98px) {
  .sl-2__container h3 {
    flex: 1 1 100%;
    width: 100%;
  }
}
.sl-2__container h3 span {
  font-size: calc(28px + ((45) - (28)) * ((100vw - 320px) / ((1920) - (320))));
  display: inline-block;
  margin-bottom: 0.3225806452em;
}
@media (min-width: 120em) {
  .sl-2__container h3 span {
    font-size: 2.8125rem;
  }
}
@media (max-width: 20em) {
  .sl-2__container h3 span {
    font-size: 1.75rem;
  }
}
.sl-2__text-block {
  width: 32.4786324786%;
  flex: 0 0 32.4786324786%;
  padding-top: 3.125rem;
}
@media (max-width: 991.98px) {
  .sl-2__text-block {
    flex: 1 1 50%;
    width: 50%;
  }
}
.sl-2__text-block h2 {
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  font-size: 3.5rem;
  line-height: 110%;
  color: #ffffff;
  margin-bottom: 1.25em;
}
@media (max-width: 1755px) {
  .sl-2__text-block h2 {
    font-size: calc(2.125rem + 22 * ((100vw - 320px) / 1435));
  }
}
.sl-2__text-block p {
  font-family: "Montserrat", sans-serif;
  font-weight: 400;
  font-size: 1.375rem;
  line-height: 170%;
  color: #ffffff;
}
@media (max-width: 1755px) {
  .sl-2__text-block p {
    font-size: calc(1rem + 6 * ((100vw - 320px) / 1435));
  }
}
.sl-2__text-block p + P {
  margin-top: 1.3636363636em;
}

.wrapper-yamaguchi {
  width: 16.875rem;
  flex: 0 0 16.875rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  align-self: center;
}
.wrapper-yamaguchi svg {
  z-index: 0;
}
.wrapper-yamaguchi .yamaguchi {
  overflow: hidden;
}
@media (max-width: 479.98px) {
  .wrapper-yamaguchi .yamaguchi {
    height: 450px;
  }
}
.wrapper-yamaguchi .yamaguchi img {
  max-height: 100%;
  position: relative;
  display: block;
  max-width: 100%;
  z-index: 5;
}

.interface {
  width: 42.4501424501%;
  flex: 0 0 42.4501424501%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  align-self: center;
}
@media (max-width: 991.98px) {
  .interface {
    flex: 0 0 100%;
    width: 100%;
  }
}
.interface img {
  max-width: 100%;
}

.blur {
  position: absolute;
  bottom: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  z-index: -10;
  backdrop-filter: blur(9.51399px);
}

.page {
  flex: 1 1 auto;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
